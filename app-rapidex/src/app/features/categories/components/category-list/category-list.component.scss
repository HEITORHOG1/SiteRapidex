@use '../../../../../styles/tokens' as *;
@use '../../../../../styles/mixins' as *;

.category-list {
  @include flex-column;
  gap: $spacing-lg;
  padding: $spacing-lg;
  min-height: 100vh;
  background-color: $gray-50;

  @include mobile-only {
    padding: $spacing-md;
    gap: $spacing-md;
  }
}

.category-list__header {
  @include flex-between;
  align-items: flex-start;
  gap: $spacing-md;
  padding-bottom: $spacing-md;
  border-bottom: 1px solid $gray-200;

  @include mobile-only {
    @include flex-column;
    align-items: stretch;
    gap: $spacing-sm;
  }
}

.category-list__title-section {
  flex: 1;
}

.category-list__title {
  @include heading-xl;
  font-size: $font-size-3xl;
  margin: 0 0 $spacing-1 0;
}

.category-list__subtitle {
  @include text-helper;
  font-size: $font-size-base;
  margin: 0;
}

.category-list__search-section {
  margin-bottom: $spacing-lg;
}

.category-list__header-actions {
  @include flex-start;
  gap: $spacing-sm;
}

.category-list__create-btn {
  @include button-primary;
  @include flex-start;
  gap: $spacing-2;
  white-space: nowrap;
  padding: $spacing-3 $spacing-4;
  font-size: $font-size-sm;

  @include mobile-only {
    width: 100%;
    justify-content: center;
  }
}

.category-list__controls {
  @include card-container;
  @include flex-between;
  align-items: flex-end;
  gap: $spacing-md;
  padding: $spacing-md;

  @include mobile-only {
    @include flex-column;
    align-items: stretch;
    gap: $spacing-sm;
  }
}

.category-list__filters {
  align-items: flex-end;
  gap: $spacing-md;
  flex: 1;
  @include flex-start;

  @include mobile-only {
    @include flex-column;
    align-items: stretch;
    gap: $spacing-sm;
  }

  @include tablet-only {
    flex-wrap: wrap;
    gap: $spacing-sm;
  }
}

// Search and controls
.category-list__search {
  flex: 1;
  min-width: 200px;
  @include mobile-only { min-width: auto; }
}

.search-input {
  position: relative;
  @include flex-center;
}

.search-input__field {
  @include form-input-base;
  width: 100%;
  padding: $spacing-3 $spacing-10 $spacing-3 $spacing-10;
  font-size: $font-size-sm;
}

.search-input__icon {
  position: absolute;
  left: $spacing-3;
  color: $gray-400;
  pointer-events: none;
}

.search-input__clear {
  @include button-reset;
  position: absolute;
  right: $spacing-3;
  color: $gray-400;
  padding: $spacing-1;
  border-radius: $border-radius-sm;
  @include flex-center;

  &:hover {
    background-color: $gray-100;
    color: $gray-600;
  }
}

.category-list__filter,
.category-list__sort {
  @include flex-column;
  gap: $spacing-1;
  min-width: 120px;
  @include mobile-only { min-width: auto; }
}

.filter-label {
  @include form-label-base;
}

.filter-select {
  @include form-input-base;
  padding: $spacing-2 $spacing-3;
  font-size: $font-size-sm;
  cursor: pointer;
}

// States
.category-list__loading {
  @include flex-column-center;
  padding: $spacing-16;
  text-align: center;
}

.loading-spinner {
  @include flex-column-center;
  gap: $spacing-md;
}

.loading-spinner__circle {
  width: 48px;
  height: 48px;
  border: 4px solid $gray-200;
  border-top: 4px solid $primary-color;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.category-list__error {
  padding: $spacing-lg;
}

.error-message {
  @include error-message;
  @include flex-start;
  gap: $spacing-md;
  padding: $spacing-lg;
}

.category-list__empty {
  @include flex-center;
  padding: $spacing-16;
  min-height: 400px;
}

.empty-state {
  text-align: center;
  max-width: 400px;
}

// Grid and items
.category-list__grid {
  display: grid;
  gap: $spacing-md;

  &--grid {
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    @include mobile-only { grid-template-columns: 1fr; }
  }

  &--list {
    grid-template-columns: 1fr;
    gap: $spacing-sm;
  }
}

.category-list__item {
  position: relative;
  @include flex-start;
  gap: $spacing-sm;
  transition: $transition-normal;

  &--selected {
    transform: scale(0.98);
    box-shadow: 0 0 0 2px $primary-color;
    border-radius: $border-radius-lg;
  }
}

// Checkbox
.checkbox-label {
  @include checkbox-label-base;
  position: relative;
}

.checkbox-input {
  @include visually-hidden;

  &:checked + .checkbox-custom {
    background-color: $primary-color;
    border-color: $primary-color;

    &::after {
      opacity: 1;
      transform: scale(1);
    }
  }
}

.checkbox-custom {
  @include checkbox-base;

  &::after {
    content: 'âœ“';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    color: $white;
    font-size: 12px;
    font-weight: bold;
    opacity: 0;
    transition: $transition-normal;
  }
}

@keyframes spin {
  to { transform: rotate(360deg); }
}